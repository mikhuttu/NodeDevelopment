{"version":3,"sources":["components/AddEntry.js","components/Filter.js","components/PeopleList.js","components/Notification.js","services/personService.js","App.js","index.js"],"names":["AddEntry","_ref","addEntry","updateNewName","updateNewNumber","react_default","a","createElement","onSubmit","onChange","type","Filter","filter","PersonDetails","person","deleteFunction","name","number","onClick","PeopleList","_ref2","people","map","PeopleList_PersonDetails","key","Notification","success","id","personUrl","concat","apiUrl","personService","all","axios","get","then","response","data","insert","newEntry","post","update","entry","put","remove","delete","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","insertPerson","insertedPerson","persons","state","successfulNotification","setState","filterPeople","hideNotification","preventDefault","newName","newNumber","existingPerson","find","p","window","confirm","updatedPerson","objectSpread","displayedPeople","catch","error","location","reload","updateNumber","setTimeout","undefined","filterHandler","target","value","toLowerCase","length","includes","_this2","components_Notification","components_Filter","components_PeopleList","components_AddEntry","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0e96e127.chunk.js","sourcesContent":["import React from 'react'\n\nconst AddEntry = ({addEntry, updateNewName, updateNewNumber}) => (\n  <form onSubmit={addEntry}>\n    <div>\n      nimi: <input onChange={updateNewName} />\n    </div>\n    <div>\n      numero: <input onChange={updateNewNumber} />\n    </div>\n    <div>\n      <button type=\"submit\">lisää</button>\n    </div>\n  </form>\n)\n\nexport default AddEntry","import React from 'react'\n\nconst Filter = ({filter}) => (\n  <div>\n    rajaa näytettäviä: <input onChange={filter} />\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonDetails = ({person, deleteFunction}) => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.number}</td>\n    <td>\n      <button onClick={() => deleteFunction(person)}>poista</button>\n    </td>\n  </tr>\n)\n\nconst PeopleList = ({people, deleteFunction}) => (\n  <table>\n    <tbody>\n      {people.map(person => \n        <PersonDetails key = {person.name} person = {person} deleteFunction = {deleteFunction} />\n      )}\n    </tbody>\n  </table>\n)\n\nexport default PeopleList","import React from 'react'\nimport '../stylesheets/notification.css'\n\nconst Notification = ({success}) => {\n\n  if (success) {\n    return(\n      <div id=\"message\">{success}</div>\n    )\n  } else {\n    return null\n  }\n\n}\n\nexport default Notification","import axios from 'axios'\n\nconst apiUrl = '/api'\nconst personsUrl = apiUrl + '/persons'\n\nconst personUrl = (id) => (\n  `${personsUrl}/${id}`\n)\n\nconst all = () => (\n  axios\n    .get(personsUrl)\n    .then(response => response.data)\n)\n\nconst insert = newEntry => (\n  axios\n    .post(personsUrl, newEntry)\n    .then(response => response.data)\n)\n\nconst update = entry => (\n  axios\n    .put(personUrl(entry.id), entry)\n    .then(response => response.data)\n)\n\nconst remove = id => (\n  axios.delete(personUrl(id))\n)\n\nexport default { all, insert, update, remove }","import React from 'react';\nimport AddEntry from './components/AddEntry'\nimport Filter from './components/Filter'\nimport PeopleList from './components/PeopleList'\nimport Notification from './components/Notification'\nimport personService from './services/personService'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      displayedPeople: [],\n      newName: '',\n      newNumber: '',\n      filter: ''\n    }\n  }\n\n  componentDidMount() {\n    personService\n    .all()\n    .then(data => this.setState({ persons: data, displayedPeople: data }))\n  }\n\n\n  addEntry = (event) => {\n    const insertPerson = person => (\n      personService\n      .insert(person)\n      .then(insertedPerson => {\n        const persons = this.state.persons.concat(insertedPerson)\n        const successfulNotification = `Lisättiin henkilö ${insertedPerson.name}`\n\n        this.setState({persons, successfulNotification})\n        this.filterPeople(persons, this.state.filter)\n        this.hideNotification()\n      })\n    )\n\n    const updateNumber = (person, newNumber) => {\n      const updatedPerson = { ...person, number: newNumber }\n\n      personService\n        .update(updatedPerson)\n        .then(data => {\n          const persons = this.state.persons.map(p => p.id === updatedPerson.id ? updatedPerson : p)\n          const displayedPeople = this.state.displayedPeople.map(p => p.id === updatedPerson.id ? updatedPerson : p)\n          const successfulNotification = `Henkilön ${updatedPerson.name} puhelinnumero vaihdettu`\n          \n          this.setState({persons, displayedPeople, successfulNotification})\n          this.hideNotification()\n        })\n        .catch(error => {\n          insertPerson(updatedPerson)\n          window.location.reload()\n        })\n    }\n\n    event.preventDefault()\n\n    const name = this.state.newName\n    const number = this.state.newNumber\n    const person = {name, number}\n\n    const existingPerson = this.state.persons.find(p => p.name === person.name)\n\n    if (! existingPerson) {\n      insertPerson(person)\n    } else if (window.confirm(`${name} on jo luettelossa. Korvataanko vanha numero uudella?`)) {\n      updateNumber(existingPerson, number)\n    }\n  }\n\n  hideNotification = () => (\n    setTimeout(() => {\n      this.setState({successfulNotification: undefined})\n    }, 5000)\n  )\n\n  filterHandler = (event) => (\n    this.filterPeople(this.state.persons, event.target.value.toLowerCase())\n  )\n  \n  filterPeople = (people, filter) => {\n    const displayedPeople = filter.length === 0 ?\n    people :\n    people.filter(p => p.name.toLowerCase().includes(filter))\n\n    this.setState({filter, displayedPeople})\n  }\n\n  remove = (person) => {\n    if (window.confirm(`Haluatko varmasti poistaa henkilön ${person.name}?`)) {\n      personService\n        .remove(person.id)\n        .then(response => {\n          const persons = this.state.persons.filter(p => p.id !== person.id)\n          const displayedPeople = this.state.displayedPeople.filter(p => p.id !== person.id)\n          const successfulNotification = `Henkilö ${person.name} poistettu`\n\n          this.setState({persons, displayedPeople, successfulNotification})\n          this.hideNotification()\n        })\n    }\n  }\n\n  updateNewName = (event) => this.setState({newName: event.target.value})\n  updateNewNumber = (event) => this.setState({newNumber: event.target.value})\n\n  render() {\n    return (\n      <div>\n        <h1>Puhelinluettelo</h1>\n\n        <Notification success = {this.state.successfulNotification} />\n\n        <Filter filter = {this.filterHandler} />\n\n        <h2>Numerot</h2>\n\n        <PeopleList people = {this.state.displayedPeople} deleteFunction = {this.remove} />\n\n        <h2>Lisää uusi / muuta olemassaolevan numeroa</h2>\n\n        <AddEntry\n          addEntry = {this.addEntry}\n          updateNewName = {this.updateNewName}\n          updateNewNumber = {this.updateNewNumber}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}